{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/c/MatchProduto/view/Produto/Novo.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Constants from 'expo-constants';\nimport * as ImagePicker from 'expo-image-picker';\nexport default function Novo(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: stylesss.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    placeholder: 'Nome',\n    style: stylesss.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    placeholder: 'Descrição',\n    style: stylesss.textarea,\n    numberOfLines: 10,\n    multiline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Pick an image from camera roll\",\n    onPress: pickImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 200,\n      height: 1000\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }\n  }), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: 'blue',\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Cadastrar\"))));\n}\nvar stylesss = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: Constants.statusBarHeight,\n    padding: 8,\n    margin: 15\n  },\n  input: {\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    padding: 10,\n    marginVertical: 5\n  },\n  textarea: {\n    height: 150,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    padding: 10,\n    marginVertical: 5\n  }\n});","map":{"version":3,"sources":["/home/c/MatchProduto/view/Produto/Novo.js"],"names":["React","useState","useEffect","Constants","ImagePicker","Novo","navigation","image","setImage","Platform","OS","requestMediaLibraryPermissionsAsync","status","alert","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","console","log","cancelled","uri","stylesss","container","input","textarea","width","height","backgroundColor","padding","color","textAlign","StyleSheet","create","flex","paddingTop","statusBarHeight","margin","borderWidth","borderColor","marginVertical"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {\n    StyleSheet,\n    View, \n    Text, \n    TextInput, \n    TouchableOpacity, \n    Button,\n    ActivityIndicator,\n    ScrollView,\n    Image,\n    Platform,\n} from 'react-native';\nimport Constants from 'expo-constants';\nimport * as ImagePicker from 'expo-image-picker';\n\nexport default function Novo({navigation})\n{\n\n    const [image, setImage] = useState(null);\n\n    useEffect(() => {\n        (async () => {\n          if (Platform.OS !== 'web') {\n            const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n            if (status !== 'granted') {\n              alert('Sorry, we need camera roll permissions to make this work!');\n            }\n          }\n        })();\n      }, []);\n    \n      const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.All,\n          allowsEditing: true,\n          aspect: [4, 3],\n          quality: 1,\n        });\n    \n        console.log(result);\n    \n        if (!result.cancelled) {\n          setImage(result.uri);\n        }\n      };\n\n    return(\n\n        <View style={stylesss.container}>\n            <TextInput\n                placeholder={'Nome'}\n                style={stylesss.input}\n            />\n\n            <TextInput\n                placeholder={'Descrição'}\n                style={stylesss.textarea}\n                numberOfLines={10}\n                multiline={true}\n            />\n            \n            <Button title=\"Pick an image from camera roll\" onPress={pickImage} />\n            {image && <Image source={{ uri: image }} style={{ width: 200, height: 1000 }} />}\n\n\n            <TouchableOpacity>\n                <View style={{ backgroundColor: 'blue', padding: 10 }}>\n                <Text style={{ color: 'white', textAlign: 'center' }}>\n                    Cadastrar\n                </Text>\n                </View>\n            </TouchableOpacity>\n        </View>\n\n    );\n}\n\nconst stylesss = StyleSheet.create({\n    container: {\n      flex: 1,\n      paddingTop: Constants.statusBarHeight,\n      padding: 8,\n      margin: 15,\n    },\n    input: {\n      height: 40,\n      borderWidth: 1,\n      borderColor: '#ccc',\n      padding: 10,\n      marginVertical: 5,\n    },\n    textarea: {\n      height: 150,\n      borderWidth: 1,\n      borderColor: '#ccc',\n      padding: 10,\n      marginVertical: 5,\n    }\n\n  });"]},"metadata":{},"sourceType":"module"}