{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport api from \"../../config/Axios\";\n\nvar UserController = function () {\n  function UserController(email, senha) {\n    _classCallCheck(this, UserController);\n\n    this.email = String;\n    this.senha = String;\n    this.ErroEmail = String;\n    this.ErroSenha = String;\n    this.users = [];\n    this.email = null;\n    this.senha = null;\n    this.users = [];\n    this.ErroEmail = null;\n    this.ErroSenha = null;\n  }\n\n  _createClass(UserController, [{\n    key: \"validaInputs\",\n    value: function validaInputs(email, senha) {\n      this.email = email;\n      this.senha = senha;\n\n      if (this.email === null && this.senha === null) {\n        this.ErroEmail = \"Preencha o campo email\";\n        this.ErroSenha = \"Preencha o campo senha\";\n        return;\n      }\n\n      if (this.email === null) this.ErroEmail = \"Preencha o campo email\";\n      if (this.senha === null) this.ErroSenha = \"Preencha o campo senha\";\n    }\n  }, {\n    key: \"getEmail\",\n    value: function getEmail() {\n      return this.email;\n    }\n  }, {\n    key: \"loginValidate\",\n    value: function loginValidate() {\n      if (this.email === \"joselc@gmail.com\" && this.senha === \"123456\") {\n        return 1;\n      } else return 0;\n    }\n  }, {\n    key: \"AllUser\",\n    value: function AllUser() {\n      return _regeneratorRuntime.async(function AllUser$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(api.get('users'));\n\n            case 2:\n              this.users = _context.sent;\n              alert(this.users);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n\n  return UserController;\n}();\n\nexport { UserController as default };","map":{"version":3,"sources":["/home/c/MatchProduto/controller/user/UserController.js"],"names":["api","UserController","email","senha","String","ErroEmail","ErroSenha","users","get","alert"],"mappings":";;;AAAA,OAAOA,GAAP;;IAEqBC,c;AAQjB,0BAAYC,KAAZ,EAAmBC,KAAnB,EACA;AAAA;;AAAA,SAPAD,KAOA,GAPQE,MAOR;AAAA,SANAD,KAMA,GANQC,MAMR;AAAA,SALAC,SAKA,GALYD,MAKZ;AAAA,SAJAE,SAIA,GAJYF,MAIZ;AAAA,SAHAG,KAGA,GAHQ,EAGR;AACI,SAAKL,KAAL,GAAa,IAAb;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKI,KAAL,GAAa,EAAb;AACA,SAAKF,SAAL,GAAiB,IAAjB;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACH;;;;WAED,sBAAaJ,KAAb,EAAoBC,KAApB,EAA0B;AAEtB,WAAKD,KAAL,GAAaA,KAAb;AACA,WAAKC,KAAL,GAAaA,KAAb;;AAEA,UAAI,KAAKD,KAAL,KAAe,IAAf,IAAuB,KAAKC,KAAL,KAAe,IAA1C,EAA+C;AAC3C,aAAKE,SAAL,GAAiB,wBAAjB;AACA,aAAKC,SAAL,GAAiB,wBAAjB;AACA;AACH;;AAGD,UAAG,KAAKJ,KAAL,KAAe,IAAlB,EACI,KAAKG,SAAL,GAAiB,wBAAjB;AACJ,UAAG,KAAKF,KAAL,KAAe,IAAlB,EACI,KAAKG,SAAL,GAAiB,wBAAjB;AACR;;;WAED,oBAAU;AAAC,aAAO,KAAKJ,KAAZ;AAAmB;;;WAG9B,yBACA;AAeG,UAAG,KAAKA,KAAL,KAAe,kBAAf,IAAqC,KAAKC,KAAL,KAAe,QAAvD,EACA;AACE,eAAO,CAAP;AACD,OAHD,MAIK,OAAO,CAAP;AAGP;;;WAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEsBH,GAAG,CAACQ,GAAJ,CAAQ,OAAR,CAFtB;;AAAA;AAEG,mBAAKD,KAFR;AAGGE,cAAAA,KAAK,CAAC,KAAKF,KAAN,CAAL;;AAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;SA/DkBN,c","sourcesContent":["import api from '../../config/Axios';\n\nexport default class UserController {\n\n    email = String;\n    senha = String;\n    ErroEmail = String;\n    ErroSenha = String;\n    users = []; \n\n    constructor(email, senha)\n    {\n        this.email = null;\n        this.senha = null;\n        this.users = [];\n        this.ErroEmail = null;\n        this.ErroSenha = null;\n    }\n\n    validaInputs(email, senha){\n\n        this.email = email;\n        this.senha = senha;\n\n        if( this.email === null && this.senha === null){\n            this.ErroEmail = \"Preencha o campo email\";\n            this.ErroSenha = \"Preencha o campo senha\";\n            return\n        }\n        //else {this.loginValidate(); return}\n        \n        if(this.email === null)\n            this.ErroEmail = \"Preencha o campo email\";\n        if(this.senha === null)\n            this.ErroSenha = \"Preencha o campo senha\";\n   }\n\n   getEmail(){return this.email;}\n\n\n   loginValidate()\n   {\n      /*const auth = getAuth();\n      signInWithEmailAndPassword(auth, email, senha)\n      .then((userCredential) => {\n        // Signed in\n        const user = userCredential.user;\n        // ...\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        alert(errorCode, errorMessage);\n        return\n      });*/\n\n      if(this.email === \"joselc@gmail.com\" && this.senha === \"123456\")\n      {\n        return 1;\n      }\n      else return 0;\n\n      //alert(\"login realizado com sucesso\");\n   }\n\n   async AllUser()\n   {\n      this.users = await api.get('users');\n      alert(this.users);\n   } \n\n}"]},"metadata":{},"sourceType":"module"}