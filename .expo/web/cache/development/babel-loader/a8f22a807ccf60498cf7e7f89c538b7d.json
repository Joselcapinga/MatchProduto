{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/c/MatchProduto/view/Register.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RegisterController from \"../controller/user/RegisterController\";\nimport styles from \"../assets/style\";\nexport default function Register(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      senha = _useState6[0],\n      setSenha = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      confirmesenha = _useState8[0],\n      setConfirmeSenha = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      erroName = _useState10[0],\n      setErroName = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      erroEmail = _useState12[0],\n      setErroEmail = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      erroSenha = _useState14[0],\n      setErroSenha = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      erroConfirmSenha = _useState16[0],\n      setErroConfirmSenha = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      erroSenhaDiferente = _useState18[0],\n      setErroSenhaDiferente = _useState18[1];\n\n  var User = new RegisterController();\n\n  function chek_register() {}\n\n  var doUserRegistration = function doUserRegistration() {\n    var usernameValue, passwordValue;\n    return _regeneratorRuntime.async(function doUserRegistration$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            usernameValue = username;\n            passwordValue = password;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(Parse.User.signUp(usernameValue, passwordValue).then(function (createdUser) {\n              Alert.alert('Success!', \"User \" + createdUser.getUsername() + \" was successfully created!\");\n              return true;\n            }).catch(function (error) {\n              Alert.alert('Error!', error.message);\n              return false;\n            }));\n\n          case 4:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.FormContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.Form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.FormLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Nome\"), React.createElement(TextInput, {\n    placeholder: \"Informe seu nome\",\n    style: styles.FormInput,\n    onChangeText: function onChangeText(name) {\n      return setName(name);\n    },\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.textErro,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, erroName), React.createElement(Text, {\n    style: styles.FormLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Email\"), React.createElement(TextInput, {\n    placeholder: \"Informe seu email\",\n    style: styles.FormInput,\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.textErro,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, erroEmail), React.createElement(Text, {\n    style: styles.FormLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Senha\"), React.createElement(TextInput, {\n    placeholder: \"Informe sua senha\",\n    style: styles.FormInput,\n    onChangeText: function onChangeText(senha) {\n      return setSenha(senha);\n    },\n    value: senha,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.textErro,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, erroSenha), React.createElement(Text, {\n    style: styles.FormLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Confirme Senha\"), React.createElement(TextInput, {\n    placeholder: \"Informe sua senha\",\n    style: styles.FormInput,\n    onChangeText: function onChangeText(senha) {\n      return setConfirmeSenha(confirmesenha);\n    },\n    value: confirmesenha,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.textErro,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, erroConfirmSenha), React.createElement(TouchableOpacity, {\n    title: \"Login\",\n    style: styles.ButtonLogin,\n    onPress: function onPress() {\n      return chek_register();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textbuttonLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"Cadastrar\")), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, erroSenhaDiferente))));\n}","map":{"version":3,"sources":["/home/c/MatchProduto/view/Register.js"],"names":["React","useState","RegisterController","styles","Register","navigation","name","setName","email","setEmail","senha","setSenha","confirmesenha","setConfirmeSenha","erroName","setErroName","erroEmail","setErroEmail","erroSenha","setErroSenha","erroConfirmSenha","setErroConfirmSenha","erroSenhaDiferente","setErroSenhaDiferente","User","chek_register","doUserRegistration","usernameValue","username","passwordValue","password","Parse","signUp","then","createdUser","Alert","alert","getUsername","catch","error","message","FormContext","Form","FormLabel","FormInput","textErro","ButtonLogin","textbuttonLogin"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {View, Text, TextInput, TouchableOpacity, Button, ScrollView} from 'react-native';\n\nimport RegisterController from '../controller/user/RegisterController';\nimport styles from '../assets/style';\n\nexport default function Register({navigation})\n{\n    \n    //var\n    const [name, setName] = useState(null);\n    const [email, setEmail] = useState(null);\n    const [senha, setSenha] = useState(null);\n    const [confirmesenha, setConfirmeSenha] = useState(null);\n    \n    // mensagem erros\n    const [erroName, setErroName] = useState(null);\n    const [erroEmail, setErroEmail] = useState(null);\n    const [erroSenha, setErroSenha] = useState(null);\n    const [erroConfirmSenha, setErroConfirmSenha] = useState(null);\n    const [erroSenhaDiferente, setErroSenhaDiferente] = useState(null);\n\n\n    const User = new RegisterController();\n\n    \n    function chek_register()\n    {\n        \n        //User.validaInputs(name, email, senha, confSenha);\n       /* setErroName(User.ErroName);\n        setErroEmail(User.ErroEmail);\n        setErroSenha(User.ErroSenha);\n        setErroConfirmSenha(User.ErroConfirmeSenha);\n        setErroSenhaDiferente(User.ErroSenhaDiferente);*/\n\n\n    }\n\n    //register firebase\n    const doUserRegistration = async function () {\n        // Note that these values come from state variables that we've declared before\n        const usernameValue = username;\n        const passwordValue = password;\n        // Since the signUp method returns a Promise, we need to call it using await\n        return await Parse.User.signUp(usernameValue, passwordValue)\n          .then((createdUser) => {\n            // Parse.User.signUp returns the already created ParseUser object if successful\n            Alert.alert(\n              'Success!',\n              `User ${createdUser.getUsername()} was successfully created!`,\n            );\n            return true;\n          })\n          .catch((error) => {\n            // signUp can fail if any parameter is blank or failed an uniqueness check on the server\n            Alert.alert('Error!', error.message);\n            return false;\n          });\n      };\n\n    return (\n\n        <View style={styles.FormContext}>\n\n        <View style={styles.Form}>\n        <ScrollView>\n        <Text style={styles.FormLabel}>Nome</Text>\n            <TextInput\n                placeholder=\"Informe seu nome\"\n                style={styles.FormInput}\n                onChangeText={name => setName(name)}\n                value={name}\n                >\n            </TextInput>\n            <Text style={styles.textErro}>{erroName}</Text>\n\n            <Text style={styles.FormLabel}>Email</Text>\n            <TextInput\n                placeholder=\"Informe seu email\"\n                style={styles.FormInput}\n                onChangeText={email => setEmail(email)}\n                value={email}\n                >\n            </TextInput>\n            <Text style={styles.textErro}>{erroEmail}</Text>\n                \n            <Text style={styles.FormLabel}>Senha</Text>\n            <TextInput\n                placeholder=\"Informe sua senha\"\n                style={styles.FormInput}\n                onChangeText={senha => setSenha(senha)}\n                value={senha}\n                >\n            </TextInput>\n            <Text style={styles.textErro}>{erroSenha}</Text>\n\n            <Text style={styles.FormLabel}>Confirme Senha</Text>\n            <TextInput\n                placeholder=\"Informe sua senha\"\n                style={styles.FormInput}\n                onChangeText={senha => setConfirmeSenha(confirmesenha)}\n                value={confirmesenha}\n                >\n            </TextInput>\n            <Text style={styles.textErro}>{erroConfirmSenha}</Text>\n\n            <TouchableOpacity \n                title=\"Login\"\n                style={styles.ButtonLogin}\n                onPress={() => chek_register()} \n                >\n                <Text style={styles.textbuttonLogin}>Cadastrar</Text>\n            </TouchableOpacity>\n\n            <Text>{erroSenhaDiferente}</Text>\n\n            </ScrollView>\n        </View>\n    </View>\n\n\n);}"]},"metadata":{},"sourceType":"module"}