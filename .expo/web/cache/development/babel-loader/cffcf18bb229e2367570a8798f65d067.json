{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/c/MatchProduto/view/Produto/Novo.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Constants from 'expo-constants';\nimport * as ImagePicker from 'expo-image-picker';\nimport styles from \"../../assets/style\";\nimport * as SQLite from 'expo-sqlite';\nvar db = SQLite.openDatabase(\"db.db\");\nexport default function Novo(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      nome = _useState2[0],\n      setNome = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      descricao = _useState4[0],\n      setDescicao = _useState4[1];\n\n  useEffect(function () {\n    db.transaction(function (txn) {\n      txn.executeSql(\"SELECT * FROM produtos sqlite_master\", [], function (tx, res) {\n        if (res.rows.length == 0) {\n          txn.executeSql('DROP TABLE produtos', []);\n          txn.executeSql('CREATE TABLE IF NOT EXISTS produtos(id INTEGER PRIMARY KEY AUTOINCREMENT, nome VARCHAR(255), descricao VARCHAR(255), imagem VARCHAR(255))', []);\n        }\n      });\n    });\n  }, []);\n\n  var getProdutos = function getProdutos(setUserFunc) {\n    db.transaction(function (tx) {\n      tx.executeSql('select * from produtos', [], function (_, _ref2) {\n        var _array = _ref2.rows._array;\n        setUserFunc(_array);\n      });\n    }, function (t, error) {\n      console.log(\"db error load produtos\");\n      console.log(error);\n    }, function (_t, _success) {\n      console.log(\"loaded produtos\");\n    });\n  };\n\n  console.log(getProdutos);\n\n  function insertProduto() {\n    db.transaction(function (tx) {\n      tx.executeSql('insert into users (nome, descricao, imagem) values (?, ?, ?)', [nome, descricao, nome]);\n      console.log(nome, descricao);\n    }, function (t, error) {\n      console.log(\"db error insertUser\");\n      console.log(error);\n    });\n  }\n\n  return React.createElement(View, {\n    style: stylesss.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    placeholder: 'Nome',\n    style: stylesss.input,\n    onChangeText: function onChangeText(nome) {\n      return setNome(nome);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    placeholder: 'Nome',\n    style: stylesss.input,\n    onChangeText: function onChangeText(nome) {\n      return setNome(nome);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    placeholder: 'Descrição',\n    style: stylesss.textarea,\n    numberOfLines: 10,\n    multiline: true,\n    onChangeText: function onChangeText(descricao) {\n      return _this.setState({\n        value: text\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    title: \"Cadastrar\",\n    style: styles.ButtonLogin,\n    onPress: function onPress() {\n      return insertProduto();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textbuttonLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"Cadastrar\")));\n}\nvar stylesss = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: Constants.statusBarHeight,\n    padding: 8,\n    margin: 15\n  },\n  input: {\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    padding: 10,\n    marginVertical: 5\n  },\n  textarea: {\n    height: 150,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    padding: 10,\n    marginVertical: 5\n  }\n});","map":{"version":3,"sources":["/home/c/MatchProduto/view/Produto/Novo.js"],"names":["React","useState","useEffect","Constants","ImagePicker","styles","SQLite","db","openDatabase","Novo","navigation","nome","setNome","descricao","setDescicao","transaction","txn","executeSql","tx","res","rows","length","getProdutos","setUserFunc","_","_array","t","error","console","log","_t","_success","insertProduto","stylesss","container","input","textarea","setState","value","text","ButtonLogin","textbuttonLogin","StyleSheet","create","flex","paddingTop","statusBarHeight","padding","margin","height","borderWidth","borderColor","marginVertical"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {\n    StyleSheet,\n    View, \n    Text, \n    TextInput, \n    TouchableOpacity, \n    Button,\n    ActivityIndicator,\n    ScrollView,\n    Image,\n    Platform,\n} from 'react-native';\nimport Constants from 'expo-constants';\nimport * as ImagePicker from 'expo-image-picker';\nimport styles from '../../assets/style';\n\nimport * as SQLite from 'expo-sqlite';\nconst db = SQLite.openDatabase(\"db.db\");\n\nexport default function Novo({navigation})\n{\n\n    //const [image, setImage] = useState(null);\n    const [nome, setNome] = useState(null);\n    const [descricao, setDescicao] = useState(null);\n\n      useEffect(() => {\n        db.transaction(function (txn) {\n          txn.executeSql(\n            \"SELECT * FROM produtos sqlite_master\",\n            [],\n            function (tx, res) {\n              //console.log('item:', res.rows.length);\n              if (res.rows.length == 0) {\n                txn.executeSql('DROP TABLE produtos', []);\n                txn.executeSql(\n                  'CREATE TABLE IF NOT EXISTS produtos(id INTEGER PRIMARY KEY AUTOINCREMENT, nome VARCHAR(255), descricao VARCHAR(255), imagem VARCHAR(255))',\n                  [],\n                );\n              }\n            },\n          );\n        });\n      }, []);\n\n      const getProdutos = (setUserFunc) => {\n        db.transaction(\n          tx => {\n            tx.executeSql(\n              'select * from produtos',\n              [],\n              (_, { rows: { _array } }) => {\n                setUserFunc(_array)\n              }\n            );\n          },\n          (t, error) => { console.log(\"db error load produtos\"); console.log(error) },\n          (_t, _success) => { console.log(\"loaded produtos\")}\n        );\n      }\n\n    console.log(getProdutos)\n\n     function insertProduto(){\n      db.transaction( tx => {\n          tx.executeSql( 'insert into users (nome, descricao, imagem) values (?, ?, ?)', [nome, descricao, nome] );\n          console.log(nome, descricao)\n        },\n        (t, error) => { console.log(\"db error insertUser\"); console.log(error);},\n      )\n    }\n\n    return(\n\n        <View style={stylesss.container}>\n            <TextInput\n                placeholder={'Nome'}\n                style={stylesss.input}\n                onChangeText={nome => setNome(nome)}\n            />\n\n            <TextInput\n                placeholder={'Nome'}\n                style={stylesss.input}\n                onChangeText={nome => setNome(nome)}\n            />\n            \n            <TextInput\n                placeholder={'Descrição'}\n                style={stylesss.textarea}\n                numberOfLines={10}\n                multiline={true}\n                onChangeText={descricao=>this.setState({value:text})}\n            />\n            \n            <TouchableOpacity \n                    title=\"Cadastrar\"\n                    style={styles.ButtonLogin}\n                    onPress={() => insertProduto()} \n                    >\n                    <Text style={styles.textbuttonLogin}>Cadastrar</Text>\n                </TouchableOpacity>\n        </View>\n\n    );\n}\n\nconst stylesss = StyleSheet.create({\n    container: {\n      flex: 1,\n      paddingTop: Constants.statusBarHeight,\n      padding: 8,\n      margin: 15,\n    },\n    input: {\n      height: 40,\n      borderWidth: 1,\n      borderColor: '#ccc',\n      padding: 10,\n      marginVertical: 5,\n    },\n    textarea: {\n      height: 150,\n      borderWidth: 1,\n      borderColor: '#ccc',\n      padding: 10,\n      marginVertical: 5,\n    },\n\n  });"]},"metadata":{},"sourceType":"module"}