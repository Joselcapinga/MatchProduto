{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/c/node/expo/MatchProduto/view/Auth/Register.js\";\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Firebase from \"../../firebase\";\nimport RegisterController from \"../../controller/user/RegisterController\";\nimport { Iconicons } from '@expo/vector-icons';\nimport styles from \"../../assets/style\";\nexport default function Register(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      senha = _useState6[0],\n      setSenha = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      confSenha = _useState8[0],\n      setConfirmeSenha = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      erroName = _useState10[0],\n      setErroName = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      erroEmail = _useState12[0],\n      setErroEmail = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      erroSenha = _useState14[0],\n      setErroSenha = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      erroConfirmSenha = _useState16[0],\n      setErroConfirmSenha = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      erroSenhaDiferente = _useState18[0],\n      setErroSenhaDiferente = _useState18[1];\n\n  var User = new RegisterController(name, email, senha, confSenha);\n\n  function register_user() {\n    if (User.AddRegister() == 1) {\n      navigation.navigate('Home');\n    }\n\n    setErroName(User.ErroName);\n    setErroEmail(User.ErroEmail);\n    setErroSenha(User.ErroSenha);\n    setErroConfirmSenha(User.ErroConfirmeSenha);\n    setErroSenhaDiferente(User.ErroSenhaDiferente);\n  }\n\n  function regist() {\n    Firebase.auth().createUserWithEmailAndPassword('jorge@a.com', '123456');\n  }\n\n  return React.createElement(View, {\n    style: styles.FormContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.Form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.FormLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Nome\"), React.createElement(TextInput, {\n    placeholder: \"Informe seu nome\",\n    style: styles.FormInput,\n    onChangeText: function onChangeText(name) {\n      return setName(name);\n    },\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.textErro,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, erroName), React.createElement(Text, {\n    style: styles.FormLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Email\"), React.createElement(TextInput, {\n    placeholder: \"Informe seu email\",\n    style: styles.FormInput,\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.textErro,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, erroEmail), React.createElement(Text, {\n    style: styles.FormLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Senha\"), React.createElement(TextInput, {\n    placeholder: \"Informe sua senha\",\n    style: styles.FormInput,\n    onChangeText: function onChangeText(senha) {\n      return setSenha(senha);\n    },\n    value: senha,\n    maxLength: 8,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.textErro,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, erroSenha), React.createElement(Text, {\n    style: styles.FormLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Confirme Senha\"), React.createElement(TextInput, {\n    placeholder: \"Informe confirma\\xE7\\xE3o da senha\",\n    style: styles.FormInput,\n    onChangeText: function onChangeText(confSenha) {\n      return setConfirmeSenha(confSenha);\n    },\n    value: confSenha,\n    maxLength: 8,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.textErro,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, erroConfirmSenha), React.createElement(Text, {\n    style: styles.textErro,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, erroSenhaDiferente), React.createElement(TouchableOpacity, {\n    title: \"Login\",\n    style: styles.ButtonLogin,\n    onPress: function onPress() {\n      return regist();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textbuttonLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Cadastrar\")))));\n}","map":{"version":3,"sources":["/home/c/node/expo/MatchProduto/view/Auth/Register.js"],"names":["React","useContext","useState","Firebase","RegisterController","Iconicons","styles","Register","navigation","name","setName","email","setEmail","senha","setSenha","confSenha","setConfirmeSenha","erroName","setErroName","erroEmail","setErroEmail","erroSenha","setErroSenha","erroConfirmSenha","setErroConfirmSenha","erroSenhaDiferente","setErroSenhaDiferente","User","register_user","AddRegister","navigate","ErroName","ErroEmail","ErroSenha","ErroConfirmeSenha","ErroSenhaDiferente","regist","auth","createUserWithEmailAndPassword","FormContext","Form","FormLabel","FormInput","textErro","ButtonLogin","textbuttonLogin"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from 'react';\nimport {View, Text, TextInput, TouchableOpacity, Button, ScrollView} from 'react-native';\nimport Firebase from '../../firebase';\nimport RegisterController from '../../controller/user/RegisterController';\nimport {Iconicons} from '@expo/vector-icons';\nimport styles from '../../assets/style';\n\n\nexport default function Register({navigation})\n{\n    //var\n    const [name, setName] = useState(null);\n    const [email, setEmail] = useState(null);\n    const [senha, setSenha] = useState(null);\n    const [confSenha, setConfirmeSenha] = useState(null);\n    \n    // mensagem erros\n    const [erroName, setErroName] = useState(null);\n    const [erroEmail, setErroEmail] = useState(null);\n    const [erroSenha, setErroSenha] = useState(null);\n    const [erroConfirmSenha, setErroConfirmSenha] = useState(null);\n    const [erroSenhaDiferente, setErroSenhaDiferente] = useState(null);\n\n    const User = new RegisterController(name, email, senha, confSenha);\n\n    function register_user()\n    {\n        if(User.AddRegister() == 1)\n        {\n            navigation.navigate('Home');\n        }\n        setErroName(User.ErroName);\n        setErroEmail(User.ErroEmail);\n        setErroSenha(User.ErroSenha);\n        setErroConfirmSenha(User.ErroConfirmeSenha);\n        setErroSenhaDiferente(User.ErroSenhaDiferente);\n    }\n\n    function regist()\n    {\n        Firebase.auth().createUserWithEmailAndPassword('jorge@a.com', '123456')\n    }\n    \n\n\n\n    return (\n\n        <View style={styles.FormContext}>\n\n        <View style={styles.Form}>\n        <ScrollView>\n        <Text style={styles.FormLabel}>Nome</Text>\n            <TextInput\n                placeholder=\"Informe seu nome\"\n                style={styles.FormInput}\n                onChangeText={name => setName(name)}\n                value={name}\n                >\n            </TextInput>\n            <Text style={styles.textErro}>{erroName}</Text>\n\n            <Text style={styles.FormLabel}>Email</Text>\n            <TextInput\n                placeholder=\"Informe seu email\"\n                style={styles.FormInput}\n                onChangeText={email => setEmail(email)}\n                value={email}\n                >\n            </TextInput>\n            <Text style={styles.textErro}>{erroEmail}</Text>\n                \n            <Text style={styles.FormLabel}>Senha</Text>\n            <TextInput\n                placeholder=\"Informe sua senha\"\n                style={styles.FormInput}\n                onChangeText={senha => setSenha(senha)}\n                value={senha}\n                maxLength={8}\n                secureTextEntry\n                >\n            </TextInput>\n            <Text style={styles.textErro}>{erroSenha}</Text>\n\n            <Text style={styles.FormLabel}>Confirme Senha</Text>\n            <TextInput\n                placeholder=\"Informe confirmação da senha\"\n                style={styles.FormInput}\n                onChangeText={confSenha => setConfirmeSenha(confSenha)}\n                value={confSenha}\n                maxLength={8}\n                secureTextEntry\n                >\n            </TextInput>\n            <Text style={styles.textErro}>{erroConfirmSenha}</Text>\n            <Text style={styles.textErro}>{erroSenhaDiferente}</Text>\n\n            <TouchableOpacity \n                title=\"Login\"\n                style={styles.ButtonLogin}\n                onPress={() => regist()} \n                >\n                <Text style={styles.textbuttonLogin}>Cadastrar</Text>\n            </TouchableOpacity>\n\n            \n\n            </ScrollView>\n        </View>\n    </View>\n\n\n);}"]},"metadata":{},"sourceType":"module"}