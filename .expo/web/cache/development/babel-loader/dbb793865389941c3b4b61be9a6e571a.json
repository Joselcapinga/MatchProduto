{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/c/node/expo/MatchProduto/view/Produto/Novo.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Constants from 'expo-constants';\nimport * as ImagePicker from 'expo-image-picker';\nimport styles from \"../../assets/style\";\nimport * as SQLite from 'expo-sqlite';\nvar db = SQLite.openDatabase(\"database.db\");\nexport default function Novo(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      nome = _useState2[0],\n      setNome = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      descricao = _useState4[0],\n      setDescicao = _useState4[1];\n\n  function insertProduto() {\n    db.transaction(function (tx) {\n      tx.executeSql('insert into produtos (nome, descricao) values (?, ?, ?)', [nome, descricao]);\n      console.log(nome, descricao);\n    }, function (t, error) {\n      console.log(\"db error insert produtos\");\n      console.log(error);\n    });\n  }\n\n  return React.createElement(View, {\n    style: stylesss.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    placeholder: 'Nome',\n    style: stylesss.input,\n    onChangeText: function onChangeText(nome) {\n      return setNome(nome);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    placeholder: 'Descrição',\n    style: stylesss.input,\n    onChangeText: function onChangeText(descricao) {\n      return setDescicao(descricao);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.ViewImagem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: styles.imagem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  })), React.createElement(Button, {\n    title: \"Carrege sua imagem\",\n    onPress: pickImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    title: \"Cadastrar\",\n    style: styles.ButtonLogin,\n    onPress: function onPress() {\n      return insertProduto();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textbuttonLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Cadastrar\")));\n}\nvar stylesss = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: Constants.statusBarHeight,\n    padding: 8,\n    margin: 15\n  },\n  input: {\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    padding: 10,\n    marginVertical: 5\n  },\n  textarea: {\n    height: 150,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    padding: 10,\n    marginVertical: 5\n  }\n});","map":{"version":3,"sources":["/home/c/node/expo/MatchProduto/view/Produto/Novo.js"],"names":["React","useState","useEffect","Constants","ImagePicker","styles","SQLite","db","openDatabase","Novo","navigation","nome","setNome","descricao","setDescicao","insertProduto","transaction","tx","executeSql","console","log","t","error","stylesss","container","input","ViewImagem","image","uri","imagem","pickImage","ButtonLogin","textbuttonLogin","StyleSheet","create","flex","paddingTop","statusBarHeight","padding","margin","height","borderWidth","borderColor","marginVertical","textarea"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;;;;;;AAaA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,OAAOC,MAAP;AAEA,OAAO,KAAKC,MAAZ,MAAwB,aAAxB;AACA,IAAMC,EAAE,GAAGD,MAAM,CAACE,YAAP,CAAoB,aAApB,CAAX;AAEA,eAAe,SAASC,IAAT,OACf;AAAA,MAD8BC,UAC9B,QAD8BA,UAC9B;;AAGI,kBAAwBT,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOU,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAiCX,QAAQ,CAAC,IAAD,CAAzC;AAAA;AAAA,MAAOY,SAAP;AAAA,MAAkBC,WAAlB;;AAEC,WAASC,aAAT,GAAwB;AACvBR,IAAAA,EAAE,CAACS,WAAH,CAAgB,UAAAC,EAAE,EAAI;AAClBA,MAAAA,EAAE,CAACC,UAAH,CAAe,yDAAf,EAA0E,CAACP,IAAD,EAAOE,SAAP,CAA1E;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ,EAAkBE,SAAlB;AACD,KAHH,EAIE,UAACQ,CAAD,EAAIC,KAAJ,EAAc;AAAEH,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AAAyCD,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AAAoB,KAJ/E;AAMD;;AAED,SAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,QAAQ,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAE,MADjB;AAEI,IAAA,KAAK,EAAED,QAAQ,CAACE,KAFpB;AAGI,IAAA,YAAY,EAAE,sBAAAd,IAAI;AAAA,aAAIC,OAAO,CAACD,IAAD,CAAX;AAAA,KAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAE,WADjB;AAEI,IAAA,KAAK,EAAEY,QAAQ,CAACE,KAFpB;AAGI,IAAA,YAAY,EAAE,sBAAAZ,SAAS;AAAA,aAAIC,WAAW,CAACD,SAAD,CAAf;AAAA,KAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAaI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACqB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,IAAI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAED;AAAP,KAAf;AAA+B,IAAA,KAAK,EAAEtB,MAAM,CAACwB,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,CAbJ,EAgBI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,oBAAd;AAAmC,IAAA,OAAO,EAAEC,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,EAkBI,oBAAC,gBAAD;AACQ,IAAA,KAAK,EAAC,WADd;AAEQ,IAAA,KAAK,EAAEzB,MAAM,CAAC0B,WAFtB;AAGQ,IAAA,OAAO,EAAE;AAAA,aAAMhB,aAAa,EAAnB;AAAA,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAAC2B,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALR,CAlBJ,CAFJ;AA8BH;AAED,IAAMT,QAAQ,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAEjC,SAAS,CAACkC,eAFb;AAGTC,IAAAA,OAAO,EAAE,CAHA;AAITC,IAAAA,MAAM,EAAE;AAJC,GADoB;AAO/Bd,EAAAA,KAAK,EAAE;AACLe,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,WAAW,EAAE,CAFR;AAGLC,IAAAA,WAAW,EAAE,MAHR;AAILJ,IAAAA,OAAO,EAAE,EAJJ;AAKLK,IAAAA,cAAc,EAAE;AALX,GAPwB;AAc/BC,EAAAA,QAAQ,EAAE;AACRJ,IAAAA,MAAM,EAAE,GADA;AAERC,IAAAA,WAAW,EAAE,CAFL;AAGRC,IAAAA,WAAW,EAAE,MAHL;AAIRJ,IAAAA,OAAO,EAAE,EAJD;AAKRK,IAAAA,cAAc,EAAE;AALR;AAdqB,CAAlB,CAAjB","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {\n    StyleSheet,\n    View, \n    Text, \n    TextInput, \n    TouchableOpacity, \n    Button,\n    ActivityIndicator,\n    ScrollView,\n    Image,\n    Platform,\n} from 'react-native';\nimport Constants from 'expo-constants';\nimport * as ImagePicker from 'expo-image-picker';\nimport styles from '../../assets/style';\n\nimport * as SQLite from 'expo-sqlite';\nconst db = SQLite.openDatabase(\"database.db\");\n\nexport default function Novo({navigation})\n{\n\n    //const [image, setImage] = useState(null);\n    const [nome, setNome] = useState(null);\n    const [descricao, setDescicao] = useState(null);\n\n     function insertProduto(){\n      db.transaction( tx => {\n          tx.executeSql( 'insert into produtos (nome, descricao) values (?, ?, ?)', [nome, descricao] );\n          console.log(nome, descricao)\n        },\n        (t, error) => { console.log(\"db error insert produtos\"); console.log(error);},\n      )\n    }\n\n    return(\n\n        <View style={stylesss.container}>\n            <TextInput\n                placeholder={'Nome'}\n                style={stylesss.input}\n                onChangeText={nome => setNome(nome)}\n            />\n\n            <TextInput\n                placeholder={'Descrição'}\n                style={stylesss.input}\n                onChangeText={descricao => setDescicao(descricao)}\n            />\n\n            <View style={styles.ViewImagem}>\n              {image && <Image source={{ uri: image }} style={styles.imagem} />}\n            </View>\n            <Button title=\"Carrege sua imagem\" onPress={pickImage} />\n            \n            <TouchableOpacity \n                    title=\"Cadastrar\"\n                    style={styles.ButtonLogin}\n                    onPress={() => insertProduto()} \n                    >\n                    <Text style={styles.textbuttonLogin}>Cadastrar</Text>\n                </TouchableOpacity>\n        </View>\n\n    );\n}\n\nconst stylesss = StyleSheet.create({\n    container: {\n      flex: 1,\n      paddingTop: Constants.statusBarHeight,\n      padding: 8,\n      margin: 15,\n    },\n    input: {\n      height: 40,\n      borderWidth: 1,\n      borderColor: '#ccc',\n      padding: 10,\n      marginVertical: 5,\n    },\n    textarea: {\n      height: 150,\n      borderWidth: 1,\n      borderColor: '#ccc',\n      padding: 10,\n      marginVertical: 5,\n    },\n\n  });"]},"metadata":{},"sourceType":"module"}