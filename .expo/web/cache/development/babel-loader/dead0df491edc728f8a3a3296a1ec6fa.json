{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport axios from \"axios\";\n\nvar UserController = function () {\n  function UserController() {\n    _classCallCheck(this, UserController);\n\n    this.email = String;\n    this.senha = String;\n    this.ErroEmail = String;\n    this.ErroSenha = String;\n    this.users = [];\n    this.email = null;\n    this.senha = null;\n    this.users = [];\n    this.ErroEmail = null;\n    this.ErroSenha = null;\n  }\n\n  _createClass(UserController, [{\n    key: \"validaInputs\",\n    value: function validaInputs(email, senha) {\n      this.email = email;\n      this.senha = senha;\n\n      if (this.email === null && this.senha === null) {\n        this.ErroEmail = \"Preencha o campo email\";\n        this.ErroSenha = \"Preencha o campo senha\";\n        return;\n      }\n\n      if (this.email === null) this.ErroEmail = \"Preencha o campo email\";\n      if (this.senha === null) this.ErroSenha = \"Preencha o campo senha\";\n    }\n  }, {\n    key: \"getEmail\",\n    value: function getEmail() {\n      return this.email;\n    }\n  }, {\n    key: \"loginValidate\",\n    value: function loginValidate() {\n      var _this = this;\n\n      var handleSignUp = function handleSignUp() {\n        auth.createUserWithEmailAndPassword(_this.email, _this.senha).then(function (userCredentials) {\n          var user = userCredentials.user;\n          console.log(user.email);\n        }).catch(function (error) {\n          return alert(error.mensagem);\n        });\n      };\n    }\n  }, {\n    key: \"AllUser\",\n    value: function AllUser() {\n      var s;\n      return _regeneratorRuntime.async(function AllUser$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(api.get('users'));\n\n            case 2:\n              s = _context.sent;\n              return _context.abrupt(\"return\", s.data.usuarios);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"users\",\n    value: function users() {\n      var _this2 = this;\n\n      search = function search(val) {\n        var res, users;\n        return _regeneratorRuntime.async(function search$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this2.setState({\n                  loading: true\n                });\n\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(axios(\"http://localhost:8000/api/users\"));\n\n              case 3:\n                res = _context2.sent;\n                _context2.next = 6;\n                return _regeneratorRuntime.awrap(res.usuarios);\n\n              case 6:\n                users = _context2.sent;\n\n                _this2.setState({\n                  users: users,\n                  loading: false\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n\n      console.log(search);\n    }\n  }]);\n\n  return UserController;\n}();\n\nexport { UserController as default };","map":{"version":3,"sources":["/home/c/MatchProduto/controller/user/UserController.js"],"names":["React","axios","UserController","email","String","senha","ErroEmail","ErroSenha","users","handleSignUp","auth","createUserWithEmailAndPassword","then","userCredentials","user","console","log","catch","error","alert","mensagem","api","get","s","data","usuarios","search","val","setState","loading","res"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEqBC,c;AAQjB,4BACA;AAAA;;AAAA,SAPAC,KAOA,GAPQC,MAOR;AAAA,SANAC,KAMA,GANQD,MAMR;AAAA,SALAE,SAKA,GALYF,MAKZ;AAAA,SAJAG,SAIA,GAJYH,MAIZ;AAAA,SAHAI,KAGA,GAHQ,EAGR;AACI,SAAKL,KAAL,GAAa,IAAb;AACA,SAAKE,KAAL,GAAa,IAAb;AACA,SAAKG,KAAL,GAAa,EAAb;AACA,SAAKF,SAAL,GAAiB,IAAjB;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACH;;;;WAED,sBAAaJ,KAAb,EAAoBE,KAApB,EACA;AAEI,WAAKF,KAAL,GAAaA,KAAb;AACA,WAAKE,KAAL,GAAaA,KAAb;;AAEA,UAAI,KAAKF,KAAL,KAAe,IAAf,IAAuB,KAAKE,KAAL,KAAe,IAA1C,EAA+C;AAC3C,aAAKC,SAAL,GAAiB,wBAAjB;AACA,aAAKC,SAAL,GAAiB,wBAAjB;AACA;AACH;;AAGD,UAAG,KAAKJ,KAAL,KAAe,IAAlB,EACI,KAAKG,SAAL,GAAiB,wBAAjB;AACJ,UAAG,KAAKD,KAAL,KAAe,IAAlB,EACI,KAAKE,SAAL,GAAiB,wBAAjB;AACR;;;WAED,oBAAU;AAAC,aAAO,KAAKJ,KAAZ;AAAmB;;;WAG9B,yBACA;AAAA;;AAeG,UAAMM,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBC,QAAAA,IAAI,CACHC,8BADD,CACgC,KAAI,CAACR,KADrC,EAC4C,KAAI,CAACE,KADjD,EAECO,IAFD,CAEM,UAAAC,eAAe,EAAI;AACrB,cAAMC,IAAI,GAAGD,eAAe,CAACC,IAA7B;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACX,KAAjB;AACH,SALD,EAMCc,KAND,CAMO,UAAAC,KAAK;AAAA,iBAAIC,KAAK,CAACD,KAAK,CAACE,QAAP,CAAT;AAAA,SANZ;AAQH,OATC;AAWF;;;WAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEkBC,GAAG,CAACC,GAAJ,CAAQ,OAAR,CAFlB;;AAAA;AAEQC,cAAAA,CAFR;AAAA,+CAGUA,CAAC,CAACC,IAAF,CAAOC,QAHjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAMA,iBACA;AAAA;;AACGC,MAAAA,MAAM,GAAG,gBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACP,gBAAA,MAAI,CAACC,QAAL,CAAc;AAAEC,kBAAAA,OAAO,EAAE;AAAX,iBAAd;;AADO;AAAA,iDAEW5B,KAAK,mCAFhB;;AAAA;AAED6B,gBAAAA,GAFC;AAAA;AAAA,iDAKaA,GAAG,CAACL,QALjB;;AAAA;AAKDjB,gBAAAA,KALC;;AAOP,gBAAA,MAAI,CAACoB,QAAL,CAAc;AAAEpB,kBAAAA,KAAK,EAALA,KAAF;AAASqB,kBAAAA,OAAO,EAAE;AAAlB,iBAAd;;AAPO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAT;;AAUAd,MAAAA,OAAO,CAACC,GAAR,CAAYU,MAAZ;AACD;;;;;;SAvFgBxB,c","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nexport default class UserController {\n\n    email = String;\n    senha = String;\n    ErroEmail = String;\n    ErroSenha = String;\n    users = []; \n\n    constructor()\n    {\n        this.email = null;\n        this.senha = null;\n        this.users = [];\n        this.ErroEmail = null;\n        this.ErroSenha = null;\n    }\n\n    validaInputs(email, senha)\n    {\n\n        this.email = email;\n        this.senha = senha;\n\n        if( this.email === null && this.senha === null){\n            this.ErroEmail = \"Preencha o campo email\";\n            this.ErroSenha = \"Preencha o campo senha\";\n            return\n        }\n        //else {this.loginValidate(); return}\n        \n        if(this.email === null)\n            this.ErroEmail = \"Preencha o campo email\";\n        if(this.senha === null)\n            this.ErroSenha = \"Preencha o campo senha\";\n   }\n\n   getEmail(){return this.email;}\n\n\n   loginValidate()\n   {\n      /*const auth = getAuth();\n      signInWithEmailAndPassword(auth, email, senha)\n      .then((userCredential) => {\n        // Signed in\n        const user = userCredential.user;\n        // ...\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        alert(errorCode, errorMessage);\n        return\n      });*/\n\n      const handleSignUp = () => {\n        auth \n        .createUserWithEmailAndPassword(this.email, this.senha)\n        .then(userCredentials => {\n            const user = userCredentials.user;\n            console.log(user.email);\n        })\n        .catch(error => alert(error.mensagem))\n        \n    }\n      //alert(\"login realizado com sucesso\");\n   }\n\n   async AllUser()\n   {\n     const s = await api.get('users'); \n     return  s.data.usuarios;      \n   } \n\n   users()\n   {\n      search = async val => {\n        this.setState({ loading: true });\n        const res = await axios(\n          `http://localhost:8000/api/users`\n        );\n        const users = await res.usuarios;\n    \n        this.setState({ users, loading: false });\n      };\n\n      console.log(search)\n    }\n\n}"]},"metadata":{},"sourceType":"module"}