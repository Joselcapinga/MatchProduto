{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport React, { useState } from 'react';\nimport api from \"../../config/Axios\";\n\nvar UserController = function () {\n  function UserController() {\n    _classCallCheck(this, UserController);\n\n    this.email = String;\n    this.senha = String;\n    this.ErroEmail = String;\n    this.ErroSenha = String;\n    this.users = [];\n    this.email = null;\n    this.senha = null;\n    this.users = [];\n    this.ErroEmail = null;\n    this.ErroSenha = null;\n  }\n\n  _createClass(UserController, [{\n    key: \"validaInputs\",\n    value: function validaInputs(email, senha) {\n      this.email = email;\n      this.senha = senha;\n\n      if (this.email === null && this.senha === null) {\n        this.ErroEmail = \"Preencha o campo email\";\n        this.ErroSenha = \"Preencha o campo senha\";\n        return;\n      }\n\n      if (this.email === null) this.ErroEmail = \"Preencha o campo email\";\n      if (this.senha === null) this.ErroSenha = \"Preencha o campo senha\";\n    }\n  }, {\n    key: \"getEmail\",\n    value: function getEmail() {\n      return this.email;\n    }\n  }, {\n    key: \"loginValidate\",\n    value: function loginValidate() {\n      var _this = this;\n\n      var handleSignUp = function handleSignUp() {\n        auth.createUserWithEmailAndPassword(_this.email, _this.senha).then(function (userCredentials) {\n          var user = userCredentials.user;\n          console.log(user.email);\n        }).catch(function (error) {\n          return alert(error.mensagem);\n        });\n      };\n    }\n  }, {\n    key: \"Allusers\",\n    value: function Allusers() {\n      api.get(\"users\").then(function (res) {\n        var users = res.data;\n        console.log(users);\n      });\n    }\n  }, {\n    key: \"Search\",\n    value: function Search() {\n      api.get(\"users/{email}\").then(function (res) {\n        var users = res.data;\n        console.log(users);\n      });\n    }\n  }]);\n\n  return UserController;\n}();\n\nexport { UserController as default };","map":{"version":3,"sources":["/home/c/MatchProduto/controller/user/UserController.js"],"names":["React","useState","api","UserController","email","String","senha","ErroEmail","ErroSenha","users","handleSignUp","auth","createUserWithEmailAndPassword","then","userCredentials","user","console","log","catch","error","alert","mensagem","get","res","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,GAAP;;IAEqBC,c;AAQjB,4BACA;AAAA;;AAAA,SAPAC,KAOA,GAPQC,MAOR;AAAA,SANAC,KAMA,GANQD,MAMR;AAAA,SALAE,SAKA,GALYF,MAKZ;AAAA,SAJAG,SAIA,GAJYH,MAIZ;AAAA,SAHAI,KAGA,GAHQ,EAGR;AACI,SAAKL,KAAL,GAAa,IAAb;AACA,SAAKE,KAAL,GAAa,IAAb;AACA,SAAKG,KAAL,GAAa,EAAb;AACA,SAAKF,SAAL,GAAiB,IAAjB;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACH;;;;WAED,sBAAaJ,KAAb,EAAoBE,KAApB,EACA;AAEI,WAAKF,KAAL,GAAaA,KAAb;AACA,WAAKE,KAAL,GAAaA,KAAb;;AAEA,UAAI,KAAKF,KAAL,KAAe,IAAf,IAAuB,KAAKE,KAAL,KAAe,IAA1C,EAA+C;AAC3C,aAAKC,SAAL,GAAiB,wBAAjB;AACA,aAAKC,SAAL,GAAiB,wBAAjB;AACA;AACH;;AAGD,UAAG,KAAKJ,KAAL,KAAe,IAAlB,EACI,KAAKG,SAAL,GAAiB,wBAAjB;AACJ,UAAG,KAAKD,KAAL,KAAe,IAAlB,EACI,KAAKE,SAAL,GAAiB,wBAAjB;AACR;;;WAED,oBAAU;AAAC,aAAO,KAAKJ,KAAZ;AAAmB;;;WAG9B,yBACA;AAAA;;AAeG,UAAMM,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBC,QAAAA,IAAI,CACHC,8BADD,CACgC,KAAI,CAACR,KADrC,EAC4C,KAAI,CAACE,KADjD,EAECO,IAFD,CAEM,UAAAC,eAAe,EAAI;AACrB,cAAMC,IAAI,GAAGD,eAAe,CAACC,IAA7B;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACX,KAAjB;AACH,SALD,EAMCc,KAND,CAMO,UAAAC,KAAK;AAAA,iBAAIC,KAAK,CAACD,KAAK,CAACE,QAAP,CAAT;AAAA,SANZ;AAQH,OATC;AAWF;;;WAED,oBACA;AAECnB,MAAAA,GAAG,CAACoB,GAAJ,CAAQ,OAAR,EAAiBT,IAAjB,CAAsB,UAAAU,GAAG,EAAI;AAC3B,YAAMd,KAAK,GAAGc,GAAG,CAACC,IAAlB;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACD,OAHD;AAKD;;;WAED,kBACA;AACEP,MAAAA,GAAG,CAACoB,GAAJ,CAAQ,eAAR,EAAyBT,IAAzB,CAA8B,UAAAU,GAAG,EAAI;AACnC,YAAMd,KAAK,GAAGc,GAAG,CAACC,IAAlB;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACD,OAHD;AAID;;;;;;SApFkBN,c","sourcesContent":["import React, {useState} from 'react';\n//import axios from \"axios\";\nimport api from '../../config/Axios';\n\nexport default class UserController {\n\n    email = String;\n    senha = String;\n    ErroEmail = String;\n    ErroSenha = String;\n    users = []; \n\n    constructor()\n    {\n        this.email = null;\n        this.senha = null;\n        this.users = [];\n        this.ErroEmail = null;\n        this.ErroSenha = null;\n    }\n\n    validaInputs(email, senha)\n    {\n\n        this.email = email;\n        this.senha = senha;\n\n        if( this.email === null && this.senha === null){\n            this.ErroEmail = \"Preencha o campo email\";\n            this.ErroSenha = \"Preencha o campo senha\";\n            return\n        }\n        //else {this.loginValidate(); return}\n        \n        if(this.email === null)\n            this.ErroEmail = \"Preencha o campo email\";\n        if(this.senha === null)\n            this.ErroSenha = \"Preencha o campo senha\";\n   }\n\n   getEmail(){return this.email;}\n\n\n   loginValidate()\n   {\n      /*const auth = getAuth();\n      signInWithEmailAndPassword(auth, email, senha)\n      .then((userCredential) => {\n        // Signed in\n        const user = userCredential.user;\n        // ...\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        alert(errorCode, errorMessage);\n        return\n      });*/\n\n      const handleSignUp = () => {\n        auth \n        .createUserWithEmailAndPassword(this.email, this.senha)\n        .then(userCredentials => {\n            const user = userCredentials.user;\n            console.log(user.email);\n        })\n        .catch(error => alert(error.mensagem))\n        \n    }\n      //alert(\"login realizado com sucesso\");\n   }\n\n   Allusers()\n   {\n\n    api.get(\"users\").then(res => {\n      const users = res.data;\n      console.log(users);\n    });\n\n  }\n\n  Search()\n  {\n    api.get(\"users/{email}\").then(res => {\n      const users = res.data;\n      console.log(users);\n    });\n  }\n\n}"]},"metadata":{},"sourceType":"module"}